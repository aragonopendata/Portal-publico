/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.aragon.base.semaphore.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the Semaphore service. Represents a row in the &quot;EAB_SEMAPHORE_Semaphore&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link es.aragon.base.semaphore.model.impl.SemaphoreModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link es.aragon.base.semaphore.model.impl.SemaphoreImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Semaphore
 * @see es.aragon.base.semaphore.model.impl.SemaphoreImpl
 * @see es.aragon.base.semaphore.model.impl.SemaphoreModelImpl
 * @generated
 */
@ProviderType
public interface SemaphoreModel extends BaseModel<Semaphore> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a semaphore model instance should use the {@link Semaphore} interface instead.
	 */

	/**
	 * Returns the primary key of this semaphore.
	 *
	 * @return the primary key of this semaphore
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this semaphore.
	 *
	 * @param primaryKey the primary key of this semaphore
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this semaphore.
	 *
	 * @return the uuid of this semaphore
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this semaphore.
	 *
	 * @param uuid the uuid of this semaphore
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the semaphore ID of this semaphore.
	 *
	 * @return the semaphore ID of this semaphore
	 */
	public long getSemaphoreId();

	/**
	 * Sets the semaphore ID of this semaphore.
	 *
	 * @param semaphoreId the semaphore ID of this semaphore
	 */
	public void setSemaphoreId(long semaphoreId);

	/**
	 * Returns the group ID of this semaphore.
	 *
	 * @return the group ID of this semaphore
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this semaphore.
	 *
	 * @param groupId the group ID of this semaphore
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the service name of this semaphore.
	 *
	 * @return the service name of this semaphore
	 */
	@AutoEscape
	public String getServiceName();

	/**
	 * Sets the service name of this semaphore.
	 *
	 * @param serviceName the service name of this semaphore
	 */
	public void setServiceName(String serviceName);

	/**
	 * Returns the max users of this semaphore.
	 *
	 * @return the max users of this semaphore
	 */
	public long getMaxUsers();

	/**
	 * Sets the max users of this semaphore.
	 *
	 * @param maxUsers the max users of this semaphore
	 */
	public void setMaxUsers(long maxUsers);

	/**
	 * Returns the current users of this semaphore.
	 *
	 * @return the current users of this semaphore
	 */
	public long getCurrentUsers();

	/**
	 * Sets the current users of this semaphore.
	 *
	 * @param currentUsers the current users of this semaphore
	 */
	public void setCurrentUsers(long currentUsers);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Semaphore semaphore);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Semaphore> toCacheModel();

	@Override
	public Semaphore toEscapedModel();

	@Override
	public Semaphore toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}