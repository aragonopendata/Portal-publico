/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.aragon.base.social_network.sb.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.exportimport.kernel.lar.StagedModelType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import es.aragon.base.social_network.sb.model.SocialNetwork;
import es.aragon.base.social_network.sb.model.SocialNetworkModel;
import es.aragon.base.social_network.sb.model.SocialNetworkSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the SocialNetwork service. Represents a row in the &quot;EAB_SN_SocialNetwork&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link SocialNetworkModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SocialNetworkImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SocialNetworkImpl
 * @see SocialNetwork
 * @see SocialNetworkModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class SocialNetworkModelImpl extends BaseModelImpl<SocialNetwork>
	implements SocialNetworkModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a social network model instance should use the {@link SocialNetwork} interface instead.
	 */
	public static final String TABLE_NAME = "EAB_SN_SocialNetwork";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "socialNetworkId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "url", Types.VARCHAR },
			{ "imageId", Types.BIGINT },
			{ "extraParameters", Types.VARCHAR },
			{ "alt", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("socialNetworkId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("url", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("imageId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("extraParameters", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("alt", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table EAB_SN_SocialNetwork (uuid_ VARCHAR(75) null,socialNetworkId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,url VARCHAR(75) null,imageId LONG,extraParameters VARCHAR(75) null,alt VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table EAB_SN_SocialNetwork";
	public static final String ORDER_BY_JPQL = " ORDER BY socialNetwork.socialNetworkId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY EAB_SN_SocialNetwork.socialNetworkId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(es.aragon.base.social_network.sb.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.es.aragon.base.social_network.sb.model.SocialNetwork"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(es.aragon.base.social_network.sb.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.es.aragon.base.social_network.sb.model.SocialNetwork"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(es.aragon.base.social_network.sb.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.es.aragon.base.social_network.sb.model.SocialNetwork"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long UUID_COLUMN_BITMASK = 4L;
	public static final long SOCIALNETWORKID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static SocialNetwork toModel(SocialNetworkSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		SocialNetwork model = new SocialNetworkImpl();

		model.setUuid(soapModel.getUuid());
		model.setSocialNetworkId(soapModel.getSocialNetworkId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setUrl(soapModel.getUrl());
		model.setImageId(soapModel.getImageId());
		model.setExtraParameters(soapModel.getExtraParameters());
		model.setAlt(soapModel.getAlt());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<SocialNetwork> toModels(SocialNetworkSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<SocialNetwork> models = new ArrayList<SocialNetwork>(soapModels.length);

		for (SocialNetworkSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(es.aragon.base.social_network.sb.service.util.ServiceProps.get(
				"lock.expiration.time.es.aragon.base.social_network.sb.model.SocialNetwork"));

	public SocialNetworkModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _socialNetworkId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSocialNetworkId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _socialNetworkId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SocialNetwork.class;
	}

	@Override
	public String getModelClassName() {
		return SocialNetwork.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("socialNetworkId", getSocialNetworkId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("url", getUrl());
		attributes.put("imageId", getImageId());
		attributes.put("extraParameters", getExtraParameters());
		attributes.put("alt", getAlt());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long socialNetworkId = (Long)attributes.get("socialNetworkId");

		if (socialNetworkId != null) {
			setSocialNetworkId(socialNetworkId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String url = (String)attributes.get("url");

		if (url != null) {
			setUrl(url);
		}

		Long imageId = (Long)attributes.get("imageId");

		if (imageId != null) {
			setImageId(imageId);
		}

		String extraParameters = (String)attributes.get("extraParameters");

		if (extraParameters != null) {
			setExtraParameters(extraParameters);
		}

		String alt = (String)attributes.get("alt");

		if (alt != null) {
			setAlt(alt);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getSocialNetworkId() {
		return _socialNetworkId;
	}

	@Override
	public void setSocialNetworkId(long socialNetworkId) {
		_socialNetworkId = socialNetworkId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getUrl() {
		if (_url == null) {
			return "";
		}
		else {
			return _url;
		}
	}

	@Override
	public void setUrl(String url) {
		_url = url;
	}

	@JSON
	@Override
	public long getImageId() {
		return _imageId;
	}

	@Override
	public void setImageId(long imageId) {
		_imageId = imageId;
	}

	@JSON
	@Override
	public String getExtraParameters() {
		if (_extraParameters == null) {
			return "";
		}
		else {
			return _extraParameters;
		}
	}

	@Override
	public void setExtraParameters(String extraParameters) {
		_extraParameters = extraParameters;
	}

	@JSON
	@Override
	public String getAlt() {
		if (_alt == null) {
			return "";
		}
		else {
			return _alt;
		}
	}

	@Override
	public void setAlt(String alt) {
		_alt = alt;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				SocialNetwork.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			SocialNetwork.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SocialNetwork toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SocialNetwork)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SocialNetworkImpl socialNetworkImpl = new SocialNetworkImpl();

		socialNetworkImpl.setUuid(getUuid());
		socialNetworkImpl.setSocialNetworkId(getSocialNetworkId());
		socialNetworkImpl.setGroupId(getGroupId());
		socialNetworkImpl.setCompanyId(getCompanyId());
		socialNetworkImpl.setUserId(getUserId());
		socialNetworkImpl.setUserName(getUserName());
		socialNetworkImpl.setCreateDate(getCreateDate());
		socialNetworkImpl.setModifiedDate(getModifiedDate());
		socialNetworkImpl.setUrl(getUrl());
		socialNetworkImpl.setImageId(getImageId());
		socialNetworkImpl.setExtraParameters(getExtraParameters());
		socialNetworkImpl.setAlt(getAlt());

		socialNetworkImpl.resetOriginalValues();

		return socialNetworkImpl;
	}

	@Override
	public int compareTo(SocialNetwork socialNetwork) {
		long primaryKey = socialNetwork.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SocialNetwork)) {
			return false;
		}

		SocialNetwork socialNetwork = (SocialNetwork)obj;

		long primaryKey = socialNetwork.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		SocialNetworkModelImpl socialNetworkModelImpl = this;

		socialNetworkModelImpl._originalUuid = socialNetworkModelImpl._uuid;

		socialNetworkModelImpl._originalGroupId = socialNetworkModelImpl._groupId;

		socialNetworkModelImpl._setOriginalGroupId = false;

		socialNetworkModelImpl._originalCompanyId = socialNetworkModelImpl._companyId;

		socialNetworkModelImpl._setOriginalCompanyId = false;

		socialNetworkModelImpl._setModifiedDate = false;

		socialNetworkModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SocialNetwork> toCacheModel() {
		SocialNetworkCacheModel socialNetworkCacheModel = new SocialNetworkCacheModel();

		socialNetworkCacheModel.uuid = getUuid();

		String uuid = socialNetworkCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			socialNetworkCacheModel.uuid = null;
		}

		socialNetworkCacheModel.socialNetworkId = getSocialNetworkId();

		socialNetworkCacheModel.groupId = getGroupId();

		socialNetworkCacheModel.companyId = getCompanyId();

		socialNetworkCacheModel.userId = getUserId();

		socialNetworkCacheModel.userName = getUserName();

		String userName = socialNetworkCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			socialNetworkCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			socialNetworkCacheModel.createDate = createDate.getTime();
		}
		else {
			socialNetworkCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			socialNetworkCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			socialNetworkCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		socialNetworkCacheModel.url = getUrl();

		String url = socialNetworkCacheModel.url;

		if ((url != null) && (url.length() == 0)) {
			socialNetworkCacheModel.url = null;
		}

		socialNetworkCacheModel.imageId = getImageId();

		socialNetworkCacheModel.extraParameters = getExtraParameters();

		String extraParameters = socialNetworkCacheModel.extraParameters;

		if ((extraParameters != null) && (extraParameters.length() == 0)) {
			socialNetworkCacheModel.extraParameters = null;
		}

		socialNetworkCacheModel.alt = getAlt();

		String alt = socialNetworkCacheModel.alt;

		if ((alt != null) && (alt.length() == 0)) {
			socialNetworkCacheModel.alt = null;
		}

		return socialNetworkCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", socialNetworkId=");
		sb.append(getSocialNetworkId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", url=");
		sb.append(getUrl());
		sb.append(", imageId=");
		sb.append(getImageId());
		sb.append(", extraParameters=");
		sb.append(getExtraParameters());
		sb.append(", alt=");
		sb.append(getAlt());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("es.aragon.base.social_network.sb.model.SocialNetwork");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>socialNetworkId</column-name><column-value><![CDATA[");
		sb.append(getSocialNetworkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>url</column-name><column-value><![CDATA[");
		sb.append(getUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imageId</column-name><column-value><![CDATA[");
		sb.append(getImageId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extraParameters</column-name><column-value><![CDATA[");
		sb.append(getExtraParameters());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>alt</column-name><column-value><![CDATA[");
		sb.append(getAlt());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = SocialNetwork.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			SocialNetwork.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _socialNetworkId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _url;
	private long _imageId;
	private String _extraParameters;
	private String _alt;
	private long _columnBitmask;
	private SocialNetwork _escapedModel;
}