/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.aragon.base.categories_importer.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ImportCategoryRegistry service. Represents a row in the &quot;EAB_CI_ImportCategoryRegistry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link es.aragon.base.categories_importer.model.impl.ImportCategoryRegistryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link es.aragon.base.categories_importer.model.impl.ImportCategoryRegistryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ImportCategoryRegistry
 * @see es.aragon.base.categories_importer.model.impl.ImportCategoryRegistryImpl
 * @see es.aragon.base.categories_importer.model.impl.ImportCategoryRegistryModelImpl
 * @generated
 */
@ProviderType
public interface ImportCategoryRegistryModel extends BaseModel<ImportCategoryRegistry> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a import category registry model instance should use the {@link ImportCategoryRegistry} interface instead.
	 */

	/**
	 * Returns the primary key of this import category registry.
	 *
	 * @return the primary key of this import category registry
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this import category registry.
	 *
	 * @param primaryKey the primary key of this import category registry
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this import category registry.
	 *
	 * @return the uuid of this import category registry
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this import category registry.
	 *
	 * @param uuid the uuid of this import category registry
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the import category registry ID of this import category registry.
	 *
	 * @return the import category registry ID of this import category registry
	 */
	public long getImportCategoryRegistryId();

	/**
	 * Sets the import category registry ID of this import category registry.
	 *
	 * @param importCategoryRegistryId the import category registry ID of this import category registry
	 */
	public void setImportCategoryRegistryId(long importCategoryRegistryId);

	/**
	 * Returns the vocabulary ID of this import category registry.
	 *
	 * @return the vocabulary ID of this import category registry
	 */
	public long getVocabularyId();

	/**
	 * Sets the vocabulary ID of this import category registry.
	 *
	 * @param vocabularyId the vocabulary ID of this import category registry
	 */
	public void setVocabularyId(long vocabularyId);

	/**
	 * Returns the category ID of this import category registry.
	 *
	 * @return the category ID of this import category registry
	 */
	public long getCategoryId();

	/**
	 * Sets the category ID of this import category registry.
	 *
	 * @param categoryId the category ID of this import category registry
	 */
	public void setCategoryId(long categoryId);

	/**
	 * Returns the import date of this import category registry.
	 *
	 * @return the import date of this import category registry
	 */
	public Date getImportDate();

	/**
	 * Sets the import date of this import category registry.
	 *
	 * @param importDate the import date of this import category registry
	 */
	public void setImportDate(Date importDate);

	/**
	 * Returns the type of this import category registry.
	 *
	 * @return the type of this import category registry
	 */
	@AutoEscape
	public String getType();

	/**
	 * Sets the type of this import category registry.
	 *
	 * @param type the type of this import category registry
	 */
	public void setType(String type);

	/**
	 * Returns the comment of this import category registry.
	 *
	 * @return the comment of this import category registry
	 */
	@AutoEscape
	public String getComment();

	/**
	 * Sets the comment of this import category registry.
	 *
	 * @param comment the comment of this import category registry
	 */
	public void setComment(String comment);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(ImportCategoryRegistry importCategoryRegistry);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ImportCategoryRegistry> toCacheModel();

	@Override
	public ImportCategoryRegistry toEscapedModel();

	@Override
	public ImportCategoryRegistry toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}